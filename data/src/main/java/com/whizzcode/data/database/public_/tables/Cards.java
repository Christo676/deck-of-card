/*
 * This file is generated by jOOQ.
*/
package com.whizzcode.data.database.public_.tables;


import com.whizzcode.data.database.public_.Indexes;
import com.whizzcode.data.database.public_.Keys;
import com.whizzcode.data.database.public_.Public;
import com.whizzcode.data.database.public_.tables.records.CardsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cards extends TableImpl<CardsRecord> {

    private static final long serialVersionUID = 1002287550;

    /**
     * The reference instance of <code>PUBLIC.CARDS</code>
     */
    public static final Cards CARDS = new Cards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CardsRecord> getRecordType() {
        return CardsRecord.class;
    }

    /**
     * The column <code>PUBLIC.CARDS.CARD_ID</code>.
     */
    public final TableField<CardsRecord, Integer> CARD_ID = createField("CARD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.CARDS.SUIT</code>.
     */
    public final TableField<CardsRecord, String> SUIT = createField("SUIT", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.CARDS.RANK</code>.
     */
    public final TableField<CardsRecord, Integer> RANK = createField("RANK", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.CARDS</code> table reference
     */
    public Cards() {
        this(DSL.name("CARDS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.CARDS</code> table reference
     */
    public Cards(String alias) {
        this(DSL.name(alias), CARDS);
    }

    /**
     * Create an aliased <code>PUBLIC.CARDS</code> table reference
     */
    public Cards(Name alias) {
        this(alias, CARDS);
    }

    private Cards(Name alias, Table<CardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cards(Name alias, Table<CardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CardsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CARDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CardsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CardsRecord>> getKeys() {
        return Arrays.<UniqueKey<CardsRecord>>asList(Keys.CONSTRAINT_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cards as(String alias) {
        return new Cards(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cards as(Name alias) {
        return new Cards(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cards rename(String name) {
        return new Cards(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cards rename(Name name) {
        return new Cards(name, null);
    }
}
