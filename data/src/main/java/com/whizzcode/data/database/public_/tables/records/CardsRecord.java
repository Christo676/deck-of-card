/*
 * This file is generated by jOOQ.
*/
package com.whizzcode.data.database.public_.tables.records;


import com.whizzcode.data.database.public_.tables.Cards;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -1016051840;

    /**
     * Setter for <code>PUBLIC.CARDS.CARD_ID</code>.
     */
    public void setCardId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.CARD_ID</code>.
     */
    public Integer getCardId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.SUIT</code>.
     */
    public void setSuit(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.SUIT</code>.
     */
    public String getSuit() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.RANK</code>.
     */
    public void setRank(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.RANK</code>.
     */
    public Integer getRank() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Cards.CARDS.CARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Cards.CARDS.SUIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Cards.CARDS.RANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSuit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getRank();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSuit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRank();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value1(Integer value) {
        setCardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value2(String value) {
        setSuit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value3(Integer value) {
        setRank(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Integer cardId, String suit, Integer rank) {
        super(Cards.CARDS);

        set(0, cardId);
        set(1, suit);
        set(2, rank);
    }
}
