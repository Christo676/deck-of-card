/*
 * This file is generated by jOOQ.
*/
package com.whizzcode.data.database.public_.tables;


import com.whizzcode.data.database.public_.Indexes;
import com.whizzcode.data.database.public_.Keys;
import com.whizzcode.data.database.public_.Public;
import com.whizzcode.data.database.public_.tables.records.DecksCardsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DecksCards extends TableImpl<DecksCardsRecord> {

    private static final long serialVersionUID = -1975345262;

    /**
     * The reference instance of <code>PUBLIC.DECKS_CARDS</code>
     */
    public static final DecksCards DECKS_CARDS = new DecksCards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DecksCardsRecord> getRecordType() {
        return DecksCardsRecord.class;
    }

    /**
     * The column <code>PUBLIC.DECKS_CARDS.DECK_ID</code>.
     */
    public final TableField<DecksCardsRecord, Integer> DECK_ID = createField("DECK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DECKS_CARDS.CARD_ID</code>.
     */
    public final TableField<DecksCardsRecord, Integer> CARD_ID = createField("CARD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DECKS_CARDS.POSITION</code>.
     */
    public final TableField<DecksCardsRecord, Integer> POSITION = createField("POSITION", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.DECKS_CARDS.DRAWN</code>.
     */
    public final TableField<DecksCardsRecord, Boolean> DRAWN = createField("DRAWN", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("FALSE", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>PUBLIC.DECKS_CARDS</code> table reference
     */
    public DecksCards() {
        this(DSL.name("DECKS_CARDS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.DECKS_CARDS</code> table reference
     */
    public DecksCards(String alias) {
        this(DSL.name(alias), DECKS_CARDS);
    }

    /**
     * Create an aliased <code>PUBLIC.DECKS_CARDS</code> table reference
     */
    public DecksCards(Name alias) {
        this(alias, DECKS_CARDS);
    }

    private DecksCards(Name alias, Table<DecksCardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DecksCards(Name alias, Table<DecksCardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_6, Indexes.CONSTRAINT_INDEX_6D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DecksCardsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DecksCardsRecord, ?>>asList(Keys.CONSTRAINT_6, Keys.CONSTRAINT_6D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DecksCards as(String alias) {
        return new DecksCards(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DecksCards as(Name alias) {
        return new DecksCards(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DecksCards rename(String name) {
        return new DecksCards(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DecksCards rename(Name name) {
        return new DecksCards(name, null);
    }
}
